import os
import subprocess
import time

# Config (env overrides)
ENFORCE_4H_CLOSE = os.getenv("ENFORCE_4H_CLOSE", "0")  # "1" = ch·ªù n·∫øn 4H ƒë√≥ng; "0" = qu√©t m·ªói gi·ªù
BLOCK_SLEEP = int(os.getenv("BLOCK_SLEEP", "60"))      # gi√¢y ngh·ªâ gi·ªØa c√°c block (m·∫∑c ƒë·ªãnh 60s)

blocks = ["block1", "block2", "block3"]

print(f"‚öôÔ∏è ENFORCE_4H_CLOSE={ENFORCE_4H_CLOSE} | BLOCK_SLEEP={BLOCK_SLEEP}s")

for block in blocks:
    print(f"\nüöÄ Running {block}...")
    try:
        # Truy·ªÅn ENFORCE_4H_CLOSE xu·ªëng process con (main.py / gpt_signal_builder.py s·∫Ω ƒë·ªçc)
        env = dict(os.environ)
        env["ENFORCE_4H_CLOSE"] = ENFORCE_4H_CLOSE
        subprocess.run(["python", "main.py", block], check=True, env=env)
    except subprocess.CalledProcessError as e:
        print(f"‚ùå L·ªói khi ch·∫°y {block}: {e}")
    except KeyboardInterrupt:
        print("‚èπÔ∏è D·ª´ng theo y√™u c·∫ßu ng∆∞·ªùi d√πng.")
        break
    time.sleep(BLOCK_SLEEP)
